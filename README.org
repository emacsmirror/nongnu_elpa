* isearch-light

An Isearch replacement for Emacs.

Provide multi matching, a real minibuffer, no unexpected quit or
errors and comprehensive mode-line indicators.

It aims to keep simple with only the needed features, no extra
features you will never use.

** install

No installation from Melpa and package.el is provided and will be provided.

*** From source

Add isearch-light.el to =load-path=.

Then add =(require 'isearch-light)= in your init file.

Even better, you can autoload it:

#+begin_src elisp
    (autoload 'isl "isearch-light" nil t)
#+end_src

With =use-package= and binding =C-s=

#+begin_src elisp
    (use-package isearch-light
      :bind (("C-s" . isl-search)))
#+end_src

*** With [[https://github.com/raxod502/straight.el][Straight]]

#+begin_src elisp
    (use-package isearch-light
      :straight (isearch-light :host github :repo "thierryvolpiatto/isearch-light")
      :bind (("C-s" . isl-search)))
#+end_src

** Usage

=M-x isl-search=

The mode-line give you several infos, arrows up/down tell you the
direction where you are actually moving, the =>= and =<= mean you are
either below or above initial position in buffer. Regex, Multi or Literal
tell you the style of search you are using. Case sensitivity in use is
notified by *, 0 or 1 which mean smart, nil or t for =case-fold-search=.

Here the commands available:

| C-s    | isl-goto-next               |
| C-r    | isl-goto-prev               |
| <down> | isl-goto-next               |
| <up>   | isl-goto-prev               |
| C-n    | isl-goto-next               |
| C-p    | isl-goto-prev               |
| RET    | isl-exit-at-point           |
| C-w    | isl-yank-word-at-point      |
| M-r    | isl-change-matching-style   |
| C-c f  | isl-select-case-fold-search |
| M-<    | isl-goto-first              |
| M->    | isl-goto-last               |
| M-=    | isl-goto-closest-from-start |
| M-s    | isl-jump-to-helm-occur      |
| C-;    | isl-jump-to-iedit-mode      |

** About multi matching

By default =isl-search= use multi matching like Helm, with limitation to
symbol, not line like in Helm, that's mean "foo bar" match "foo-bar"
or "bar-foo" but not a line with "foo" and "bar" inside e.g. "foo some
text bar", when you want to match something like this you have to use
regexp e.g. "foo.*bar".

To use multi matching, separate text with one space, each pattern
beginning by "!" will mean match everything but this, e.g. "foo !bar"
will not match "foo-bar" but will match "foo-baz".

[[screen_shot1.png]]

Note: You can jump to =helm-occur= for a line based search.
You can also jump to [[https://github.com/victorhge/iedit][iedit-mode]] with multi match pattern.

** Use isearch-light for helm-help

Starting from Emacs-27 Isearch works more or less with unexpected
effects, you have better time using =isl-search= as the search command for
helm-help, here how to replace default setting by `isl` in helm-help:

#+begin_src elisp
    (use-package helm-lib
      :config
      (use-package isearch-light
        :straight (isearch-light :host github :repo "thierryvolpiatto/isearch-light"))
      (helm-help-define-key "C-s" nil)
      (helm-help-define-key "C-r" nil)
      (helm-help-define-key "C-s" 'isl-search))
#+end_src

An alternative is to customize `helm-help-hkmap` from the customize interface.


